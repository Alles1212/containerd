  version: '3.8'

  services:
    backend:
      build:
        context: ./Backend
        dockerfile: Dockerfile
      container_name: backend
      ports:
        - "8080:8080"
      depends_on:
        - redis
        - mongodb
      restart: always
      environment:
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - MONGODB_URI=mongodb://mongodb:27017

    frontend:
      build:
        context: ./Frontend
        dockerfile: Dockerfile
      container_name: frontend
      ports:
        - "3000:3000"
      depends_on:
        - backend
      restart: always
      environment:
        - NEXT_PUBLIC_API_URL=http://localhost:8080
        - NEXT_PUBLIC_WS_URL=ws://localhost:8080/ws

    redis:
      image: redis:latest
      container_name: redis
      ports:
        - "6379:6379"
      restart: always
      #volumes:
      #  - redis_data:/data

    mongodb:
      image: mongo:latest
      container_name: mongodb
      ports:
        - "27017:27017"
      restart: always
      #volumes:
      #  - mongodb_data:/data/db
    k6_pressure_test:
      image: grafana/k6:latest
      container_name: k6_pressure_test
      volumes:
        - ./k6:/scripts          
      depends_on:
        - backend
        - redis
        - mongodb
      entrypoint: [ "k6", "run", "/scripts/pressure_test.js" ]
    k6_socket_test:
      image: grafana/k6:latest
      container_name: k6_socket_test
      volumes:
        - ./k6:/scripts          
      depends_on:
        - k6_pressure_test
        - backend
        - redis
        - mongodb
      entrypoint: [ "k6", "run", "/scripts/socket_test.js" ]
      
  volumes:
    frontend_node_modules:
    #redis_data:
    #mongodb_data:
