"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-select";
exports.ids = ["vendor-chunks/hast-util-select"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-select/lib/attribute.js":
/*!********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/attribute.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attribute: () => (/* binding */ attribute)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/lib/find.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/space-separated-tokens/index.js\");\n/**\n * @import {AstAttribute} from 'css-selector-parser'\n * @import {Element, Properties} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */ \n\n\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function attribute(query, element, schema) {\n    const info = (0,property_information__WEBPACK_IMPORTED_MODULE_0__.find)(schema, query.name);\n    const propertyValue = element.properties[info.property];\n    let value = normalizeValue(propertyValue, info);\n    // Exists.\n    if (!query.value) {\n        return value !== undefined;\n    }\n    (0,devlop__WEBPACK_IMPORTED_MODULE_1__.ok)(query.value.type === \"String\", \"expected plain string\");\n    let key = query.value.value;\n    // Case-sensitivity.\n    if (query.caseSensitivityModifier === \"i\") {\n        key = key.toLowerCase();\n        if (value) {\n            value = value.toLowerCase();\n        }\n    }\n    if (value !== undefined) {\n        switch(query.operator){\n            // Exact.\n            case \"=\":\n                {\n                    return key === value;\n                }\n            // Ends.\n            case \"$=\":\n                {\n                    return key === value.slice(-key.length);\n                }\n            // Contains.\n            case \"*=\":\n                {\n                    return value.includes(key);\n                }\n            // Begins.\n            case \"^=\":\n                {\n                    return key === value.slice(0, key.length);\n                }\n            // Exact or prefix.\n            case \"|=\":\n                {\n                    return key === value || key === value.slice(0, key.length) && value.charAt(key.length) === \"-\";\n                }\n            // Space-separated list.\n            case \"~=\":\n                {\n                    return(// For all other values (including comma-separated lists), return whether this\n                    // is an exact match.\n                    key === value || // If this is a space-separated list, and the query is contained in it, return\n                    // true.\n                    space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__.parse(value).includes(key));\n                }\n        }\n    }\n    return false;\n}\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */ function normalizeValue(value, info) {\n    if (value === null || value === undefined) {\n    // Empty.\n    } else if (typeof value === \"boolean\") {\n        if (value) {\n            return info.attribute;\n        }\n    } else if (Array.isArray(value)) {\n        if (value.length > 0) {\n            return (info.commaSeparated ? comma_separated_tokens__WEBPACK_IMPORTED_MODULE_3__.stringify : space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__.stringify)(value);\n        }\n    } else {\n        return String(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvYXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUV5RDtBQUN2QjtBQUNNO0FBQ087QUFFaEQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU00sVUFBVUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLE1BQU07SUFDOUMsTUFBTUMsT0FBT04sMERBQUlBLENBQUNLLFFBQVFGLE1BQU1JLElBQUk7SUFDcEMsTUFBTUMsZ0JBQWdCSixRQUFRSyxVQUFVLENBQUNILEtBQUtJLFFBQVEsQ0FBQztJQUN2RCxJQUFJQyxRQUFRQyxlQUFlSixlQUFlRjtJQUUxQyxVQUFVO0lBQ1YsSUFBSSxDQUFDSCxNQUFNUSxLQUFLLEVBQUU7UUFDaEIsT0FBT0EsVUFBVUU7SUFDbkI7SUFFQWQsMENBQU1BLENBQUNJLE1BQU1RLEtBQUssQ0FBQ0csSUFBSSxLQUFLLFVBQVU7SUFDdEMsSUFBSUMsTUFBTVosTUFBTVEsS0FBSyxDQUFDQSxLQUFLO0lBRTNCLG9CQUFvQjtJQUNwQixJQUFJUixNQUFNYSx1QkFBdUIsS0FBSyxLQUFLO1FBQ3pDRCxNQUFNQSxJQUFJRSxXQUFXO1FBRXJCLElBQUlOLE9BQU87WUFDVEEsUUFBUUEsTUFBTU0sV0FBVztRQUMzQjtJQUNGO0lBRUEsSUFBSU4sVUFBVUUsV0FBVztRQUN2QixPQUFRVixNQUFNZSxRQUFRO1lBQ3BCLFNBQVM7WUFDVCxLQUFLO2dCQUFLO29CQUNSLE9BQU9ILFFBQVFKO2dCQUNqQjtZQUVBLFFBQVE7WUFDUixLQUFLO2dCQUFNO29CQUNULE9BQU9JLFFBQVFKLE1BQU1RLEtBQUssQ0FBQyxDQUFDSixJQUFJSyxNQUFNO2dCQUN4QztZQUVBLFlBQVk7WUFDWixLQUFLO2dCQUFNO29CQUNULE9BQU9ULE1BQU1VLFFBQVEsQ0FBQ047Z0JBQ3hCO1lBRUEsVUFBVTtZQUNWLEtBQUs7Z0JBQU07b0JBQ1QsT0FBT0EsUUFBUUosTUFBTVEsS0FBSyxDQUFDLEdBQUdKLElBQUlLLE1BQU07Z0JBQzFDO1lBRUEsbUJBQW1CO1lBQ25CLEtBQUs7Z0JBQU07b0JBQ1QsT0FDRUwsUUFBUUosU0FDUEksUUFBUUosTUFBTVEsS0FBSyxDQUFDLEdBQUdKLElBQUlLLE1BQU0sS0FDaENULE1BQU1XLE1BQU0sQ0FBQ1AsSUFBSUssTUFBTSxNQUFNO2dCQUVuQztZQUVBLHdCQUF3QjtZQUN4QixLQUFLO2dCQUFNO29CQUNULE9BQ0UsOEVBQThFO29CQUM5RSxxQkFBcUI7b0JBQ3JCTCxRQUFRSixTQUNSLDhFQUE4RTtvQkFDOUUsUUFBUTtvQkFDUlYseURBQVksQ0FBQ1UsT0FBT1UsUUFBUSxDQUFDTjtnQkFFakM7UUFHRjtJQUNGO0lBRUEsT0FBTztBQUNUO0FBRUE7Ozs7O0NBS0MsR0FDRCxTQUFTSCxlQUFlRCxLQUFLLEVBQUVMLElBQUk7SUFDakMsSUFBSUssVUFBVSxRQUFRQSxVQUFVRSxXQUFXO0lBQ3pDLFNBQVM7SUFDWCxPQUFPLElBQUksT0FBT0YsVUFBVSxXQUFXO1FBQ3JDLElBQUlBLE9BQU87WUFDVCxPQUFPTCxLQUFLSixTQUFTO1FBQ3ZCO0lBQ0YsT0FBTyxJQUFJc0IsTUFBTUMsT0FBTyxDQUFDZCxRQUFRO1FBQy9CLElBQUlBLE1BQU1TLE1BQU0sR0FBRyxHQUFHO1lBQ3BCLE9BQU8sQ0FBQ2QsS0FBS29CLGNBQWMsR0FBRzdCLDZEQUFNQSxHQUFHSSw2REFBZ0IsRUFBRVU7UUFDM0Q7SUFDRixPQUFPO1FBQ0wsT0FBT2dCLE9BQU9oQjtJQUNoQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29udGFpbmVyZF9tdWx0aW5vdGVzLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL2F0dHJpYnV0ZS5qcz8yMTk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7QXN0QXR0cmlidXRlfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuICogQGltcG9ydCB7RWxlbWVudCwgUHJvcGVydGllc30gZnJvbSAnaGFzdCdcbiAqIEBpbXBvcnQge0luZm8sIFNjaGVtYX0gZnJvbSAncHJvcGVydHktaW5mb3JtYXRpb24nXG4gKi9cblxuaW1wb3J0IHtzdHJpbmdpZnkgYXMgY29tbWFzfSBmcm9tICdjb21tYS1zZXBhcmF0ZWQtdG9rZW5zJ1xuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ2RldmxvcCdcbmltcG9ydCB7ZmluZH0gZnJvbSAncHJvcGVydHktaW5mb3JtYXRpb24nXG5pbXBvcnQgKiBhcyBzcGFjZXMgZnJvbSAnc3BhY2Utc2VwYXJhdGVkLXRva2VucydcblxuLyoqXG4gKiBAcGFyYW0ge0FzdEF0dHJpYnV0ZX0gcXVlcnlcbiAqICAgUXVlcnkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEBwYXJhbSB7U2NoZW1hfSBzY2hlbWFcbiAqICAgU2NoZW1hIG9mIGVsZW1lbnQuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqICAgV2hldGhlciBgZWxlbWVudGAgbWF0Y2hlcyBgcXVlcnlgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXR0cmlidXRlKHF1ZXJ5LCBlbGVtZW50LCBzY2hlbWEpIHtcbiAgY29uc3QgaW5mbyA9IGZpbmQoc2NoZW1hLCBxdWVyeS5uYW1lKVxuICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gZWxlbWVudC5wcm9wZXJ0aWVzW2luZm8ucHJvcGVydHldXG4gIGxldCB2YWx1ZSA9IG5vcm1hbGl6ZVZhbHVlKHByb3BlcnR5VmFsdWUsIGluZm8pXG5cbiAgLy8gRXhpc3RzLlxuICBpZiAoIXF1ZXJ5LnZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWRcbiAgfVxuXG4gIGFzc2VydChxdWVyeS52YWx1ZS50eXBlID09PSAnU3RyaW5nJywgJ2V4cGVjdGVkIHBsYWluIHN0cmluZycpXG4gIGxldCBrZXkgPSBxdWVyeS52YWx1ZS52YWx1ZVxuXG4gIC8vIENhc2Utc2Vuc2l0aXZpdHkuXG4gIGlmIChxdWVyeS5jYXNlU2Vuc2l0aXZpdHlNb2RpZmllciA9PT0gJ2knKSB7XG4gICAga2V5ID0ga2V5LnRvTG93ZXJDYXNlKClcblxuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpXG4gICAgfVxuICB9XG5cbiAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICBzd2l0Y2ggKHF1ZXJ5Lm9wZXJhdG9yKSB7XG4gICAgICAvLyBFeGFjdC5cbiAgICAgIGNhc2UgJz0nOiB7XG4gICAgICAgIHJldHVybiBrZXkgPT09IHZhbHVlXG4gICAgICB9XG5cbiAgICAgIC8vIEVuZHMuXG4gICAgICBjYXNlICckPSc6IHtcbiAgICAgICAgcmV0dXJuIGtleSA9PT0gdmFsdWUuc2xpY2UoLWtleS5sZW5ndGgpXG4gICAgICB9XG5cbiAgICAgIC8vIENvbnRhaW5zLlxuICAgICAgY2FzZSAnKj0nOiB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5pbmNsdWRlcyhrZXkpXG4gICAgICB9XG5cbiAgICAgIC8vIEJlZ2lucy5cbiAgICAgIGNhc2UgJ149Jzoge1xuICAgICAgICByZXR1cm4ga2V5ID09PSB2YWx1ZS5zbGljZSgwLCBrZXkubGVuZ3RoKVxuICAgICAgfVxuXG4gICAgICAvLyBFeGFjdCBvciBwcmVmaXguXG4gICAgICBjYXNlICd8PSc6IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICBrZXkgPT09IHZhbHVlIHx8XG4gICAgICAgICAgKGtleSA9PT0gdmFsdWUuc2xpY2UoMCwga2V5Lmxlbmd0aCkgJiZcbiAgICAgICAgICAgIHZhbHVlLmNoYXJBdChrZXkubGVuZ3RoKSA9PT0gJy0nKVxuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIC8vIFNwYWNlLXNlcGFyYXRlZCBsaXN0LlxuICAgICAgY2FzZSAnfj0nOiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgLy8gRm9yIGFsbCBvdGhlciB2YWx1ZXMgKGluY2x1ZGluZyBjb21tYS1zZXBhcmF0ZWQgbGlzdHMpLCByZXR1cm4gd2hldGhlciB0aGlzXG4gICAgICAgICAgLy8gaXMgYW4gZXhhY3QgbWF0Y2guXG4gICAgICAgICAga2V5ID09PSB2YWx1ZSB8fFxuICAgICAgICAgIC8vIElmIHRoaXMgaXMgYSBzcGFjZS1zZXBhcmF0ZWQgbGlzdCwgYW5kIHRoZSBxdWVyeSBpcyBjb250YWluZWQgaW4gaXQsIHJldHVyblxuICAgICAgICAgIC8vIHRydWUuXG4gICAgICAgICAgc3BhY2VzLnBhcnNlKHZhbHVlKS5pbmNsdWRlcyhrZXkpXG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIC8vIE90aGVyIHZhbHVlcyBhcmUgbm90IHlldCBzdXBwb3J0ZWQgYnkgQ1NTLlxuICAgICAgLy8gTm8gZGVmYXVsdFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZVxufVxuXG4vKipcbiAqXG4gKiBAcGFyYW0ge1Byb3BlcnRpZXNba2V5b2YgUHJvcGVydGllc119IHZhbHVlXG4gKiBAcGFyYW0ge0luZm99IGluZm9cbiAqIEByZXR1cm5zIHtzdHJpbmcgfCB1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZVZhbHVlKHZhbHVlLCBpbmZvKSB7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gRW1wdHkuXG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHJldHVybiBpbmZvLmF0dHJpYnV0ZVxuICAgIH1cbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIGlmICh2YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gKGluZm8uY29tbWFTZXBhcmF0ZWQgPyBjb21tYXMgOiBzcGFjZXMuc3RyaW5naWZ5KSh2YWx1ZSlcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFN0cmluZyh2YWx1ZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbInN0cmluZ2lmeSIsImNvbW1hcyIsIm9rIiwiYXNzZXJ0IiwiZmluZCIsInNwYWNlcyIsImF0dHJpYnV0ZSIsInF1ZXJ5IiwiZWxlbWVudCIsInNjaGVtYSIsImluZm8iLCJuYW1lIiwicHJvcGVydHlWYWx1ZSIsInByb3BlcnRpZXMiLCJwcm9wZXJ0eSIsInZhbHVlIiwibm9ybWFsaXplVmFsdWUiLCJ1bmRlZmluZWQiLCJ0eXBlIiwia2V5IiwiY2FzZVNlbnNpdGl2aXR5TW9kaWZpZXIiLCJ0b0xvd2VyQ2FzZSIsIm9wZXJhdG9yIiwic2xpY2UiLCJsZW5ndGgiLCJpbmNsdWRlcyIsImNoYXJBdCIsInBhcnNlIiwiQXJyYXkiLCJpc0FycmF5IiwiY29tbWFTZXBhcmF0ZWQiLCJTdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/attribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/class-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/class-name.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   className: () => (/* binding */ className)\n/* harmony export */ });\n/**\n * @import {AstClassName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */ /** @type {Array<never>} */ const emptyClassNames = [];\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function className(query, element) {\n    // Assume array.\n    const value = /** @type {Readonly<Array<string>>} */ element.properties.className || emptyClassNames;\n    return value.includes(query.name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvY2xhc3MtbmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBRUQseUJBQXlCLEdBQ3pCLE1BQU1BLGtCQUFrQixFQUFFO0FBRTFCOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNDLFVBQVVDLEtBQUssRUFBRUMsT0FBTztJQUN0QyxnQkFBZ0I7SUFDaEIsTUFBTUMsUUFBUSxvQ0FBb0MsR0FDaERELFFBQVFFLFVBQVUsQ0FBQ0osU0FBUyxJQUFJRDtJQUdsQyxPQUFPSSxNQUFNRSxRQUFRLENBQUNKLE1BQU1LLElBQUk7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb250YWluZXJkX211bHRpbm90ZXMvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvY2xhc3MtbmFtZS5qcz85NjRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7QXN0Q2xhc3NOYW1lfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuICogQGltcG9ydCB7RWxlbWVudH0gZnJvbSAnaGFzdCdcbiAqL1xuXG4vKiogQHR5cGUge0FycmF5PG5ldmVyPn0gKi9cbmNvbnN0IGVtcHR5Q2xhc3NOYW1lcyA9IFtdXG5cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGhhcyBhbGwgY2xhc3MgbmFtZXMuXG4gKlxuICogQHBhcmFtIHtBc3RDbGFzc05hbWV9IHF1ZXJ5XG4gKiAgIEFTVCBydWxlICh3aXRoIGBjbGFzc05hbWVzYCkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFzc05hbWUocXVlcnksIGVsZW1lbnQpIHtcbiAgLy8gQXNzdW1lIGFycmF5LlxuICBjb25zdCB2YWx1ZSA9IC8qKiBAdHlwZSB7UmVhZG9ubHk8QXJyYXk8c3RyaW5nPj59ICovIChcbiAgICBlbGVtZW50LnByb3BlcnRpZXMuY2xhc3NOYW1lIHx8IGVtcHR5Q2xhc3NOYW1lc1xuICApXG5cbiAgcmV0dXJuIHZhbHVlLmluY2x1ZGVzKHF1ZXJ5Lm5hbWUpXG59XG4iXSwibmFtZXMiOlsiZW1wdHlDbGFzc05hbWVzIiwiY2xhc3NOYW1lIiwicXVlcnkiLCJlbGVtZW50IiwidmFsdWUiLCJwcm9wZXJ0aWVzIiwiaW5jbHVkZXMiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/class-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/enter-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/enter-state.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enterState: () => (/* binding */ enterState)\n/* harmony export */ });\n/* harmony import */ var direction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! direction */ \"(ssr)/./node_modules/direction/index.js\");\n/* harmony import */ var hast_util_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-to-string */ \"(ssr)/./node_modules/hast-util-to-string/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit-parents/lib/index.js\");\n/**\n * @import {Visitor} from 'unist-util-visit'\n * @import {ElementContent, Nodes} from 'hast'\n * @import {Direction, State} from './index.js'\n */ \n\n\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */ // eslint-disable-next-line complexity\nfunction enterState(state, node) {\n    const schema = state.schema;\n    const language = state.language;\n    const currentDirection = state.direction;\n    const editableOrEditingHost = state.editableOrEditingHost;\n    /** @type {Direction | undefined} */ let directionInferred;\n    if (node.type === \"element\") {\n        const lang = node.properties.xmlLang || node.properties.lang;\n        const type = node.properties.type || \"text\";\n        const direction = directionProperty(node);\n        if (lang !== null && lang !== undefined) {\n            state.language = String(lang);\n        }\n        if (schema && schema.space === \"html\") {\n            if (node.properties.contentEditable === \"true\") {\n                state.editableOrEditingHost = true;\n            }\n            if (node.tagName === \"svg\") {\n                state.schema = property_information__WEBPACK_IMPORTED_MODULE_0__.svg;\n            }\n            // See: <https://html.spec.whatwg.org/#the-directionality>.\n            // Explicit `[dir=rtl]`.\n            if (direction === \"rtl\") {\n                directionInferred = direction;\n            } else if (// Explicit `[dir=ltr]`.\n            direction === \"ltr\" || // HTML with an invalid or no `[dir]`.\n            direction !== \"auto\" && node.tagName === \"html\" || // `input[type=tel]` with an invalid or no `[dir]`.\n            direction !== \"auto\" && node.tagName === \"input\" && type === \"tel\") {\n                directionInferred = \"ltr\";\n            // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n            } else if (direction === \"auto\" || node.tagName === \"bdi\") {\n                if (node.tagName === \"textarea\") {\n                    // Check contents of `<textarea>`.\n                    directionInferred = directionBidi((0,hast_util_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(node));\n                } else if (node.tagName === \"input\" && (type === \"email\" || type === \"search\" || type === \"tel\" || type === \"text\")) {\n                    // Check value of `<input>`.\n                    directionInferred = node.properties.value ? directionBidi(String(node.properties.value)) : \"ltr\";\n                } else {\n                    // Check text nodes in `node`.\n                    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(node, inferDirectionality);\n                }\n            }\n            if (directionInferred) {\n                state.direction = directionInferred;\n            }\n        } else if (state.editableOrEditingHost) {\n            state.editableOrEditingHost = false;\n        }\n    }\n    return reset;\n    /**\n   * @returns {undefined}\n   *   Nothing.\n   */ function reset() {\n        state.schema = schema;\n        state.language = language;\n        state.direction = currentDirection;\n        state.editableOrEditingHost = editableOrEditingHost;\n    }\n    /** @type {Visitor<ElementContent>} */ function inferDirectionality(child) {\n        if (child.type === \"text\") {\n            directionInferred = directionBidi(child.value);\n            return directionInferred ? unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.EXIT : undefined;\n        }\n        if (child !== node && child.type === \"element\" && (child.tagName === \"bdi\" || child.tagName === \"script\" || child.tagName === \"style\" || child.tagName === \"textare\" || directionProperty(child))) {\n            return unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.SKIP;\n        }\n    }\n}\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */ function directionBidi(value) {\n    const result = (0,direction__WEBPACK_IMPORTED_MODULE_4__.direction)(value);\n    return result === \"neutral\" ? undefined : result;\n}\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */ function directionProperty(node) {\n    const value = node.type === \"element\" && typeof node.properties.dir === \"string\" ? node.properties.dir.toLowerCase() : undefined;\n    return value === \"auto\" || value === \"ltr\" || value === \"rtl\" ? value : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/enter-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/id.js":
/*!*************************************************!*\
  !*** ./node_modules/hast-util-select/lib/id.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   id: () => (/* binding */ id)\n/* harmony export */ });\n/**\n * @import {AstId} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */ /**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function id(query, element) {\n    return element.properties.id === query.name;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvaWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLFNBQVNBLEdBQUdDLEtBQUssRUFBRUMsT0FBTztJQUMvQixPQUFPQSxRQUFRQyxVQUFVLENBQUNILEVBQUUsS0FBS0MsTUFBTUcsSUFBSTtBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnRhaW5lcmRfbXVsdGlub3Rlcy8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtc2VsZWN0L2xpYi9pZC5qcz8yZGJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGltcG9ydCB7QXN0SWR9IGZyb20gJ2Nzcy1zZWxlY3Rvci1wYXJzZXInXG4gKiBAaW1wb3J0IHtFbGVtZW50fSBmcm9tICdoYXN0J1xuICovXG5cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGhhcyBhbiBJRC5cbiAqXG4gKiBAcGFyYW0ge0FzdElkfSBxdWVyeVxuICogICBBU1QgcnVsZSAod2l0aCBgaWRzYCkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpZChxdWVyeSwgZWxlbWVudCkge1xuICByZXR1cm4gZWxlbWVudC5wcm9wZXJ0aWVzLmlkID09PSBxdWVyeS5uYW1lXG59XG4iXSwibmFtZXMiOlsiaWQiLCJxdWVyeSIsImVsZW1lbnQiLCJwcm9wZXJ0aWVzIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matches: () => (/* binding */ matches),\n/* harmony export */   select: () => (/* binding */ select),\n/* harmony export */   selectAll: () => (/* binding */ selectAll)\n/* harmony export */ });\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/hast-util-select/lib/parse.js\");\n/* harmony import */ var _walk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./walk.js */ \"(ssr)/./node_modules/hast-util-select/lib/walk.js\");\n/**\n * @import {AstSelector} from 'css-selector-parser'\n * @import {Element, Nodes, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n */ /**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */ \n\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */ function matches(selector, node, space) {\n    const state = createState(selector, node, space);\n    state.one = true;\n    state.shallow = true;\n    (0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, node || undefined);\n    return state.results.length > 0;\n}\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */ function select(selector, tree, space) {\n    const state = createState(selector, tree, space);\n    state.one = true;\n    (0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, tree || undefined);\n    return state.results[0];\n}\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */ function selectAll(selector, tree, space) {\n    const state = createState(selector, tree, space);\n    (0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, tree || undefined);\n    return state.results;\n}\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */ function createState(selector, tree, space) {\n    return {\n        direction: \"ltr\",\n        editableOrEditingHost: false,\n        elementCount: undefined,\n        elementIndex: undefined,\n        found: false,\n        language: undefined,\n        one: false,\n        // State of the query.\n        results: [],\n        rootQuery: (0,_parse_js__WEBPACK_IMPORTED_MODULE_1__.parse)(selector),\n        schema: space === \"svg\" ? property_information__WEBPACK_IMPORTED_MODULE_2__.svg : property_information__WEBPACK_IMPORTED_MODULE_2__.html,\n        scopeElements: tree ? tree.type === \"root\" ? tree.children : [\n            tree\n        ] : [],\n        shallow: false,\n        typeIndex: undefined,\n        typeCount: undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNDQyxHQUU2QztBQUNkO0FBQ0Y7QUFFOUI7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FnQkMsR0FDTSxTQUFTSSxRQUFRQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsS0FBSztJQUMzQyxNQUFNQyxRQUFRQyxZQUFZSixVQUFVQyxNQUFNQztJQUMxQ0MsTUFBTUUsR0FBRyxHQUFHO0lBQ1pGLE1BQU1HLE9BQU8sR0FBRztJQUNoQlIsOENBQUlBLENBQUNLLE9BQU9GLFFBQVFNO0lBQ3BCLE9BQU9KLE1BQU1LLE9BQU8sQ0FBQ0MsTUFBTSxHQUFHO0FBQ2hDO0FBRUE7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNDLE9BQU9WLFFBQVEsRUFBRVcsSUFBSSxFQUFFVCxLQUFLO0lBQzFDLE1BQU1DLFFBQVFDLFlBQVlKLFVBQVVXLE1BQU1UO0lBQzFDQyxNQUFNRSxHQUFHLEdBQUc7SUFDWlAsOENBQUlBLENBQUNLLE9BQU9RLFFBQVFKO0lBQ3BCLE9BQU9KLE1BQU1LLE9BQU8sQ0FBQyxFQUFFO0FBQ3pCO0FBRUE7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLFNBQVNJLFVBQVVaLFFBQVEsRUFBRVcsSUFBSSxFQUFFVCxLQUFLO0lBQzdDLE1BQU1DLFFBQVFDLFlBQVlKLFVBQVVXLE1BQU1UO0lBQzFDSiw4Q0FBSUEsQ0FBQ0ssT0FBT1EsUUFBUUo7SUFDcEIsT0FBT0osTUFBTUssT0FBTztBQUN0QjtBQUVBOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNKLFlBQVlKLFFBQVEsRUFBRVcsSUFBSSxFQUFFVCxLQUFLO0lBQ3hDLE9BQU87UUFDTFcsV0FBVztRQUNYQyx1QkFBdUI7UUFDdkJDLGNBQWNSO1FBQ2RTLGNBQWNUO1FBQ2RVLE9BQU87UUFDUEMsVUFBVVg7UUFDVkYsS0FBSztRQUNMLHNCQUFzQjtRQUN0QkcsU0FBUyxFQUFFO1FBQ1hXLFdBQVd0QixnREFBS0EsQ0FBQ0c7UUFDakJvQixRQUFRbEIsVUFBVSxRQUFRTixxREFBR0EsR0FBR0Qsc0RBQUlBO1FBQ3BDMEIsZUFBZVYsT0FBUUEsS0FBS1csSUFBSSxLQUFLLFNBQVNYLEtBQUtZLFFBQVEsR0FBRztZQUFDWjtTQUFLLEdBQUksRUFBRTtRQUMxRUwsU0FBUztRQUNUa0IsV0FBV2pCO1FBQ1hrQixXQUFXbEI7SUFDYjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29udGFpbmVyZF9tdWx0aW5vdGVzLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL2luZGV4LmpzPzhhMmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtBc3RTZWxlY3Rvcn0gZnJvbSAnY3NzLXNlbGVjdG9yLXBhcnNlcidcbiAqIEBpbXBvcnQge0VsZW1lbnQsIE5vZGVzLCBSb290Q29udGVudH0gZnJvbSAnaGFzdCdcbiAqIEBpbXBvcnQge1NjaGVtYX0gZnJvbSAncHJvcGVydHktaW5mb3JtYXRpb24nXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiB7J2h0bWwnIHwgJ3N2Zyd9IFNwYWNlXG4gKiAgIE5hbWUgb2YgbmFtZXNwYWNlLlxuICpcbiAqIEB0eXBlZGVmIHsnYXV0bycgfCAnbHRyJyB8ICdydGwnfSBEaXJlY3Rpb25cbiAqICAgRGlyZWN0aW9uLlxuICpcbiAqIEB0eXBlZGVmIFN0YXRlXG4gKiAgIEN1cnJlbnQgc3RhdGUuXG4gKiBAcHJvcGVydHkge0RpcmVjdGlvbn0gZGlyZWN0aW9uXG4gKiAgIEN1cnJlbnQgZGlyZWN0aW9uLlxuICogQHByb3BlcnR5IHtib29sZWFufSBlZGl0YWJsZU9yRWRpdGluZ0hvc3RcbiAqICAgV2hldGhlciB3ZeKAmXJlIGluIGBjb250ZW50RWRpdGFibGVgLlxuICogQHByb3BlcnR5IHtudW1iZXIgfCB1bmRlZmluZWR9IGVsZW1lbnRDb3VudFxuICogICBUcmFjayBzaWJsaW5nczogdGhlcmUgYXJlIGBuYCBzaWJsaW5ncy5cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBlbGVtZW50SW5kZXhcbiAqICAgVHJhY2sgc2libGluZ3M6IHRoaXMgY3VycmVudCBlbGVtZW50IGhhcyBgbmAgZWxlbWVudHMgYmVmb3JlIGl0LlxuICogQHByb3BlcnR5IHtib29sZWFufSBmb3VuZFxuICogICBXaGV0aGVyIHdlIGZvdW5kIGF0IGxlYXN0IG9uZSBtYXRjaC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nIHwgdW5kZWZpbmVkfSBsYW5ndWFnZVxuICogICBDdXJyZW50IGxhbmd1YWdlLlxuICogQHByb3BlcnR5IHtib29sZWFufSBvbmVcbiAqICAgV2hldGhlciB3ZSBjYW4gc3RvcCBsb29raW5nIGFmdGVyIHdlIGZvdW5kIG9uZSBlbGVtZW50LlxuICogQHByb3BlcnR5IHtBcnJheTxFbGVtZW50Pn0gcmVzdWx0c1xuICogICBNYXRjaGVzLlxuICogQHByb3BlcnR5IHtBc3RTZWxlY3Rvcn0gcm9vdFF1ZXJ5XG4gKiAgIE9yaWdpbmFsIHJvb3Qgc2VsZWN0b3JzLlxuICogQHByb3BlcnR5IHtTY2hlbWF9IHNjaGVtYVxuICogICBDdXJyZW50IHNjaGVtYS5cbiAqIEBwcm9wZXJ0eSB7QXJyYXk8Um9vdENvbnRlbnQ+fSBzY29wZUVsZW1lbnRzXG4gKiAgIEVsZW1lbnRzIGluIHNjb3BlLlxuICogQHByb3BlcnR5IHtib29sZWFufSBzaGFsbG93XG4gKiAgIFdoZXRoZXIgd2Ugb25seSBhbGxvdyBzZWxlY3RvcnMgd2l0aG91dCBuZXN0aW5nLlxuICogQHByb3BlcnR5IHtudW1iZXIgfCB1bmRlZmluZWR9IHR5cGVDb3VudFxuICogICBUcmFjayBzaWJsaW5nczogdGhlcmUgYXJlIGBuYCBzaWJsaW5ncyB3aXRoIHRoaXMgZWxlbWVudOKAmXMgdGFnIG5hbWUuXG4gKiBAcHJvcGVydHkge251bWJlciB8IHVuZGVmaW5lZH0gdHlwZUluZGV4XG4gKiAgIFRyYWNrIHNpYmxpbmdzOiB0aGlzIGN1cnJlbnQgZWxlbWVudCBoYXMgYG5gIGVsZW1lbnRzIHdpdGggaXRzIHRhZyBuYW1lXG4gKiAgIGJlZm9yZSBpdC5cbiAqL1xuXG5pbXBvcnQge2h0bWwsIHN2Z30gZnJvbSAncHJvcGVydHktaW5mb3JtYXRpb24nXG5pbXBvcnQge3BhcnNlfSBmcm9tICcuL3BhcnNlLmpzJ1xuaW1wb3J0IHt3YWxrfSBmcm9tICcuL3dhbGsuanMnXG5cbi8qKlxuICogQ2hlY2sgdGhhdCB0aGUgZ2l2ZW4gYG5vZGVgIG1hdGNoZXMgYHNlbGVjdG9yYC5cbiAqXG4gKiBUaGlzIG9ubHkgY2hlY2tzIHRoZSBlbGVtZW50IGl0c2VsZiwgbm90IHRoZSBzdXJyb3VuZGluZyB0cmVlLlxuICogVGh1cywgbmVzdGluZyBpbiBzZWxlY3RvcnMgaXMgbm90IHN1cHBvcnRlZCAoYHAgYmAsIGBwID4gYmApLCBuZWl0aGVyIGFyZVxuICogc2VsZWN0b3JzIGxpa2UgYDpmaXJzdC1jaGlsZGAsIGV0Yy5cbiAqIFRoaXMgb25seSBjaGVja3MgdGhhdCB0aGUgZ2l2ZW4gZWxlbWVudCBtYXRjaGVzIHRoZSBzZWxlY3Rvci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3JcbiAqICAgQ1NTIHNlbGVjdG9yLCBzdWNoIGFzIChgaDFgLCBgYSwgYmApLlxuICogQHBhcmFtIHtOb2RlcyB8IG51bGwgfCB1bmRlZmluZWR9IFtub2RlXVxuICogICBOb2RlIHRoYXQgbWlnaHQgbWF0Y2ggYHNlbGVjdG9yYCwgc2hvdWxkIGJlIGFuIGVsZW1lbnQgKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB7U3BhY2UgfCBudWxsIHwgdW5kZWZpbmVkfSBbc3BhY2U9J2h0bWwnXVxuICogICBOYW1lIG9mIG5hbWVzcGFjZSAoZGVmYXVsdDogYCdodG1sJ2ApLlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKiAgIFdoZXRoZXIgYG5vZGVgIG1hdGNoZXMgYHNlbGVjdG9yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hdGNoZXMoc2VsZWN0b3IsIG5vZGUsIHNwYWNlKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUoc2VsZWN0b3IsIG5vZGUsIHNwYWNlKVxuICBzdGF0ZS5vbmUgPSB0cnVlXG4gIHN0YXRlLnNoYWxsb3cgPSB0cnVlXG4gIHdhbGsoc3RhdGUsIG5vZGUgfHwgdW5kZWZpbmVkKVxuICByZXR1cm4gc3RhdGUucmVzdWx0cy5sZW5ndGggPiAwXG59XG5cbi8qKlxuICogU2VsZWN0IHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgbWF0Y2hlcyBgc2VsZWN0b3JgIGluIHRoZSBnaXZlbiBgdHJlZWAuXG4gKiBTZWFyY2hlcyB0aGUgdHJlZSBpbiAqcHJlb3JkZXIqLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvclxuICogICBDU1Mgc2VsZWN0b3IsIHN1Y2ggYXMgKGBoMWAsIGBhLCBiYCkuXG4gKiBAcGFyYW0ge05vZGVzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3RyZWVdXG4gKiAgIFRyZWUgdG8gc2VhcmNoIChvcHRpb25hbCkuXG4gKiBAcGFyYW0ge1NwYWNlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3NwYWNlPSdodG1sJ11cbiAqICAgTmFtZSBvZiBuYW1lc3BhY2UgKGRlZmF1bHQ6IGAnaHRtbCdgKS5cbiAqIEByZXR1cm5zIHtFbGVtZW50IHwgdW5kZWZpbmVkfVxuICogICBGaXJzdCBlbGVtZW50IGluIGB0cmVlYCB0aGF0IG1hdGNoZXMgYHNlbGVjdG9yYCBvciBgdW5kZWZpbmVkYCBpZiBub3RoaW5nXG4gKiAgIGlzIGZvdW5kOyB0aGlzIGNvdWxkIGJlIGB0cmVlYCBpdHNlbGYuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Qoc2VsZWN0b3IsIHRyZWUsIHNwYWNlKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUoc2VsZWN0b3IsIHRyZWUsIHNwYWNlKVxuICBzdGF0ZS5vbmUgPSB0cnVlXG4gIHdhbGsoc3RhdGUsIHRyZWUgfHwgdW5kZWZpbmVkKVxuICByZXR1cm4gc3RhdGUucmVzdWx0c1swXVxufVxuXG4vKipcbiAqIFNlbGVjdCBhbGwgZWxlbWVudHMgdGhhdCBtYXRjaCBgc2VsZWN0b3JgIGluIHRoZSBnaXZlbiBgdHJlZWAuXG4gKiBTZWFyY2hlcyB0aGUgdHJlZSBpbiAqcHJlb3JkZXIqLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvclxuICogICBDU1Mgc2VsZWN0b3IsIHN1Y2ggYXMgKGBoMWAsIGBhLCBiYCkuXG4gKiBAcGFyYW0ge05vZGVzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3RyZWVdXG4gKiAgIFRyZWUgdG8gc2VhcmNoIChvcHRpb25hbCkuXG4gKiBAcGFyYW0ge1NwYWNlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3NwYWNlPSdodG1sJ11cbiAqICAgTmFtZSBvZiBuYW1lc3BhY2UgKGRlZmF1bHQ6IGAnaHRtbCdgKS5cbiAqIEByZXR1cm5zIHtBcnJheTxFbGVtZW50Pn1cbiAqICAgRWxlbWVudHMgaW4gYHRyZWVgIHRoYXQgbWF0Y2ggYHNlbGVjdG9yYC5cbiAqICAgVGhpcyBjb3VsZCBpbmNsdWRlIGB0cmVlYCBpdHNlbGYuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RBbGwoc2VsZWN0b3IsIHRyZWUsIHNwYWNlKSB7XG4gIGNvbnN0IHN0YXRlID0gY3JlYXRlU3RhdGUoc2VsZWN0b3IsIHRyZWUsIHNwYWNlKVxuICB3YWxrKHN0YXRlLCB0cmVlIHx8IHVuZGVmaW5lZClcbiAgcmV0dXJuIHN0YXRlLnJlc3VsdHNcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3JcbiAqICAgQ1NTIHNlbGVjdG9yLCBzdWNoIGFzIChgaDFgLCBgYSwgYmApLlxuICogQHBhcmFtIHtOb2RlcyB8IG51bGwgfCB1bmRlZmluZWR9IFt0cmVlXVxuICogICBUcmVlIHRvIHNlYXJjaCAob3B0aW9uYWwpLlxuICogQHBhcmFtIHtTcGFjZSB8IG51bGwgfCB1bmRlZmluZWR9IFtzcGFjZT0naHRtbCddXG4gKiAgIE5hbWUgb2YgbmFtZXNwYWNlIChkZWZhdWx0OiBgJ2h0bWwnYCkuXG4gKiBAcmV0dXJucyB7U3RhdGV9IFN0YXRlXG4gKiAgIFN0YXRlLlxuICovXG5mdW5jdGlvbiBjcmVhdGVTdGF0ZShzZWxlY3RvciwgdHJlZSwgc3BhY2UpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXJlY3Rpb246ICdsdHInLFxuICAgIGVkaXRhYmxlT3JFZGl0aW5nSG9zdDogZmFsc2UsXG4gICAgZWxlbWVudENvdW50OiB1bmRlZmluZWQsXG4gICAgZWxlbWVudEluZGV4OiB1bmRlZmluZWQsXG4gICAgZm91bmQ6IGZhbHNlLFxuICAgIGxhbmd1YWdlOiB1bmRlZmluZWQsXG4gICAgb25lOiBmYWxzZSxcbiAgICAvLyBTdGF0ZSBvZiB0aGUgcXVlcnkuXG4gICAgcmVzdWx0czogW10sXG4gICAgcm9vdFF1ZXJ5OiBwYXJzZShzZWxlY3RvciksXG4gICAgc2NoZW1hOiBzcGFjZSA9PT0gJ3N2ZycgPyBzdmcgOiBodG1sLFxuICAgIHNjb3BlRWxlbWVudHM6IHRyZWUgPyAodHJlZS50eXBlID09PSAncm9vdCcgPyB0cmVlLmNoaWxkcmVuIDogW3RyZWVdKSA6IFtdLFxuICAgIHNoYWxsb3c6IGZhbHNlLFxuICAgIHR5cGVJbmRleDogdW5kZWZpbmVkLFxuICAgIHR5cGVDb3VudDogdW5kZWZpbmVkXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJodG1sIiwic3ZnIiwicGFyc2UiLCJ3YWxrIiwibWF0Y2hlcyIsInNlbGVjdG9yIiwibm9kZSIsInNwYWNlIiwic3RhdGUiLCJjcmVhdGVTdGF0ZSIsIm9uZSIsInNoYWxsb3ciLCJ1bmRlZmluZWQiLCJyZXN1bHRzIiwibGVuZ3RoIiwic2VsZWN0IiwidHJlZSIsInNlbGVjdEFsbCIsImRpcmVjdGlvbiIsImVkaXRhYmxlT3JFZGl0aW5nSG9zdCIsImVsZW1lbnRDb3VudCIsImVsZW1lbnRJbmRleCIsImZvdW5kIiwibGFuZ3VhZ2UiLCJyb290UXVlcnkiLCJzY2hlbWEiLCJzY29wZUVsZW1lbnRzIiwidHlwZSIsImNoaWxkcmVuIiwidHlwZUluZGV4IiwidHlwZUNvdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/name.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/name.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/**\n * @import {AstTagName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */ /**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function name(query, element) {\n    return query.name === element.tagName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvbmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztDQUdDLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0EsS0FBS0MsS0FBSyxFQUFFQyxPQUFPO0lBQ2pDLE9BQU9ELE1BQU1ELElBQUksS0FBS0UsUUFBUUMsT0FBTztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnRhaW5lcmRfbXVsdGlub3Rlcy8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtc2VsZWN0L2xpYi9uYW1lLmpzPzgxM2YiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtBc3RUYWdOYW1lfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuICogQGltcG9ydCB7RWxlbWVudH0gZnJvbSAnaGFzdCdcbiAqL1xuXG4vKipcbiAqIENoZWNrIHdoZXRoZXIgYW4gZWxlbWVudCBoYXMgYSB0YWcgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge0FzdFRhZ05hbWV9IHF1ZXJ5XG4gKiAgIEFTVCBydWxlICh3aXRoIGB0YWdgKS5cbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogICBFbGVtZW50LlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKiAgIFdoZXRoZXIgYGVsZW1lbnRgIG1hdGNoZXMgYHF1ZXJ5YC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5hbWUocXVlcnksIGVsZW1lbnQpIHtcbiAgcmV0dXJuIHF1ZXJ5Lm5hbWUgPT09IGVsZW1lbnQudGFnTmFtZVxufVxuIl0sIm5hbWVzIjpbIm5hbWUiLCJxdWVyeSIsImVsZW1lbnQiLCJ0YWdOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/parse.js":
/*!****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/parse.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var css_selector_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! css-selector-parser */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/index.js\");\n/**\n * @import {AstSelector} from 'css-selector-parser'\n */ \nconst cssSelectorParse = (0,css_selector_parser__WEBPACK_IMPORTED_MODULE_0__.createParser)({\n    syntax: \"selectors-4\"\n});\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */ function parse(selector) {\n    if (typeof selector !== \"string\") {\n        throw new TypeError(\"Expected `string` as selector, not `\" + selector + \"`\");\n    }\n    return cssSelectorParse(selector);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Q0FFQyxHQUUrQztBQUVoRCxNQUFNQyxtQkFBbUJELGlFQUFZQSxDQUFDO0lBQUNFLFFBQVE7QUFBYTtBQUU1RDs7Ozs7Q0FLQyxHQUNNLFNBQVNDLE1BQU1DLFFBQVE7SUFDNUIsSUFBSSxPQUFPQSxhQUFhLFVBQVU7UUFDaEMsTUFBTSxJQUFJQyxVQUFVLHlDQUF5Q0QsV0FBVztJQUMxRTtJQUVBLE9BQU9ILGlCQUFpQkc7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb250YWluZXJkX211bHRpbm90ZXMvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvcGFyc2UuanM/OWQ2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbXBvcnQge0FzdFNlbGVjdG9yfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuICovXG5cbmltcG9ydCB7Y3JlYXRlUGFyc2VyfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuXG5jb25zdCBjc3NTZWxlY3RvclBhcnNlID0gY3JlYXRlUGFyc2VyKHtzeW50YXg6ICdzZWxlY3RvcnMtNCd9KVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvclxuICogICBTZWxlY3RvciB0byBwYXJzZS5cbiAqIEByZXR1cm5zIHtBc3RTZWxlY3Rvcn1cbiAqICAgUGFyc2VkIHNlbGVjdG9yLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc2VsZWN0b3IpIHtcbiAgaWYgKHR5cGVvZiBzZWxlY3RvciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBgc3RyaW5nYCBhcyBzZWxlY3Rvciwgbm90IGAnICsgc2VsZWN0b3IgKyAnYCcpXG4gIH1cblxuICByZXR1cm4gY3NzU2VsZWN0b3JQYXJzZShzZWxlY3Rvcilcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVQYXJzZXIiLCJjc3NTZWxlY3RvclBhcnNlIiwic3ludGF4IiwicGFyc2UiLCJzZWxlY3RvciIsIlR5cGVFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/pseudo.js":
/*!*****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/pseudo.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pseudo: () => (/* binding */ pseudo)\n/* harmony export */ });\n/* harmony import */ var bcp_47_match__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bcp-47-match */ \"(ssr)/./node_modules/bcp-47-match/index.js\");\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-has-property */ \"(ssr)/./node_modules/hast-util-has-property/lib/index.js\");\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-whitespace */ \"(ssr)/./node_modules/hast-util-whitespace/lib/index.js\");\n/* harmony import */ var nth_check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nth-check */ \"(ssr)/./node_modules/nth-check/lib/esm/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zwitch */ \"(ssr)/./node_modules/zwitch/index.js\");\n/* harmony import */ var _walk_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./walk.js */ \"(ssr)/./node_modules/hast-util-select/lib/walk.js\");\n/**\n * @import {AstPseudoClass} from 'css-selector-parser'\n * @import {default as NthCheck} from 'nth-check'\n * @import {ElementContent, Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */ \n\n\n\n\n\n\n\n/** @type {NthCheck} */ // @ts-expect-error: types are broken.\nconst nthCheck = nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"default\"] || nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */ const pseudo = (0,zwitch__WEBPACK_IMPORTED_MODULE_1__.zwitch)(\"name\", {\n    handlers: {\n        \"any-link\": anyLink,\n        blank,\n        checked,\n        dir,\n        disabled,\n        empty,\n        enabled,\n        \"first-child\": firstChild,\n        \"first-of-type\": firstOfType,\n        has,\n        is,\n        lang,\n        \"last-child\": lastChild,\n        \"last-of-type\": lastOfType,\n        not,\n        \"nth-child\": nthChild,\n        \"nth-last-child\": nthLastChild,\n        \"nth-last-of-type\": nthLastOfType,\n        \"nth-of-type\": nthOfType,\n        \"only-child\": onlyChild,\n        \"only-of-type\": onlyOfType,\n        optional,\n        \"read-only\": readOnly,\n        \"read-write\": readWrite,\n        required,\n        root,\n        scope\n    },\n    invalid: invalidPseudo,\n    unknown: unknownPseudo\n});\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function anyLink(_, element) {\n    return (element.tagName === \"a\" || element.tagName === \"area\" || element.tagName === \"link\") && (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"href\");\n}\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */ function assertDeep(state, query) {\n    if (state.shallow) {\n        throw new Error(\"Cannot use `:\" + query.name + \"` without parent\");\n    }\n}\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function blank(_, element) {\n    return !someChildren(element, check);\n    /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */ function check(child) {\n        return child.type === \"element\" || child.type === \"text\" && !(0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__.whitespace)(child);\n    }\n}\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function checked(_, element) {\n    if (element.tagName === \"input\" || element.tagName === \"menuitem\") {\n        return Boolean((element.properties.type === \"checkbox\" || element.properties.type === \"radio\") && (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"checked\"));\n    }\n    if (element.tagName === \"option\") {\n        return (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"selected\");\n    }\n    return false;\n}\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ // eslint-disable-next-line unicorn/prevent-abbreviations\nfunction dir(query, _1, _2, _3, state) {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, \"expected `argument`\");\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === \"String\", \"expected plain text\");\n    return state.direction === query.argument.value;\n}\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function disabled(_, element) {\n    return (element.tagName === \"button\" || element.tagName === \"input\" || element.tagName === \"select\" || element.tagName === \"textarea\" || element.tagName === \"optgroup\" || element.tagName === \"option\" || element.tagName === \"menuitem\" || element.tagName === \"fieldset\") && (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"disabled\");\n}\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function empty(_, element) {\n    return !someChildren(element, check);\n    /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */ function check(child) {\n        return child.type === \"element\" || child.type === \"text\";\n    }\n}\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function enabled(query, element) {\n    return !disabled(query, element);\n}\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function firstChild(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return state.elementIndex === 0;\n}\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function firstOfType(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return state.typeIndex === 0;\n}\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */ function getCachedNthCheck(query) {\n    /** @type {(value: number) => boolean} */ // @ts-expect-error: cache.\n    let cachedFunction = query._cachedFn;\n    if (!cachedFunction) {\n        const value = query.argument;\n        (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(value, \"expected `argument`\");\n        if (value.type !== \"Formula\") {\n            throw new Error(\"Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)\");\n        }\n        cachedFunction = nthCheck(value.a + \"n+\" + value.b);\n        // @ts-expect-error: cache.\n        query._cachedFn = cachedFunction;\n    }\n    return cachedFunction;\n}\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function has(query, element, _1, _2, state) {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, \"expected `argument`\");\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === \"Selector\", \"expected selector\");\n    /** @type {State} */ const childState = {\n        ...state,\n        // Not found yet.\n        found: false,\n        // One result is enough.\n        one: true,\n        results: [],\n        rootQuery: query.argument,\n        scopeElements: [\n            element\n        ],\n        // Do walk deep.\n        shallow: false\n    };\n    (0,_walk_js__WEBPACK_IMPORTED_MODULE_5__.walk)(childState, {\n        type: \"root\",\n        children: element.children\n    });\n    return childState.results.length > 0;\n}\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */ function invalidPseudo() {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.unreachable)(\"Invalid pseudo-selector\");\n}\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function is(query, element, _1, _2, state) {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, \"expected `argument`\");\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === \"Selector\", \"expected selector\");\n    /** @type {State} */ const childState = {\n        ...state,\n        // Not found yet.\n        found: false,\n        // One result is enough.\n        one: true,\n        results: [],\n        rootQuery: query.argument,\n        scopeElements: [\n            element\n        ],\n        // Do walk deep.\n        shallow: false\n    };\n    (0,_walk_js__WEBPACK_IMPORTED_MODULE_5__.walk)(childState, element);\n    return childState.results[0] === element;\n}\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function lang(query, _1, _2, _3, state) {\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, \"expected `argument`\");\n    (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === \"String\", \"expected string\");\n    return state.language !== \"\" && state.language !== undefined && (0,bcp_47_match__WEBPACK_IMPORTED_MODULE_6__.extendedFilter)(state.language, (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_7__.parse)(query.argument.value)).length > 0;\n}\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function lastChild(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return Boolean(state.elementCount && state.elementIndex === state.elementCount - 1);\n}\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function lastOfType(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return typeof state.typeIndex === \"number\" && typeof state.typeCount === \"number\" && state.typeIndex === state.typeCount - 1;\n}\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function not(query, element, index, parent, state) {\n    return !is(query, element, index, parent, state);\n}\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function nthChild(query, _1, _2, _3, state) {\n    const cachedFunction = getCachedNthCheck(query);\n    assertDeep(state, query);\n    return typeof state.elementIndex === \"number\" && cachedFunction(state.elementIndex);\n}\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function nthLastChild(query, _1, _2, _3, state) {\n    const cachedFunction = getCachedNthCheck(query);\n    assertDeep(state, query);\n    return Boolean(typeof state.elementCount === \"number\" && typeof state.elementIndex === \"number\" && cachedFunction(state.elementCount - state.elementIndex - 1));\n}\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function nthLastOfType(query, _1, _2, _3, state) {\n    const cachedFunction = getCachedNthCheck(query);\n    assertDeep(state, query);\n    return typeof state.typeCount === \"number\" && typeof state.typeIndex === \"number\" && cachedFunction(state.typeCount - 1 - state.typeIndex);\n}\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function nthOfType(query, _1, _2, _3, state) {\n    const cachedFunction = getCachedNthCheck(query);\n    assertDeep(state, query);\n    return typeof state.typeIndex === \"number\" && cachedFunction(state.typeIndex);\n}\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function onlyChild(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return state.elementCount === 1;\n}\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function onlyOfType(query, _1, _2, _3, state) {\n    assertDeep(state, query);\n    return state.typeCount === 1;\n}\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function optional(query, element) {\n    return !required(query, element);\n}\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function readOnly(query, element, index, parent, state) {\n    return !readWrite(query, element, index, parent, state);\n}\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function readWrite(_, element, _1, _2, state) {\n    return element.tagName === \"input\" || element.tagName === \"textarea\" ? !(0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"readOnly\") && !(0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"disabled\") : Boolean(state.editableOrEditingHost);\n}\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function required(_, element) {\n    return (element.tagName === \"input\" || element.tagName === \"textarea\" || element.tagName === \"select\") && (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, \"required\");\n}\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function root(_1, element, _2, parent, state) {\n    return Boolean((!parent || parent.type === \"root\") && state.schema && (state.schema.space === \"html\" || state.schema.space === \"svg\") && (element.tagName === \"html\" || element.tagName === \"svg\"));\n}\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function scope(_1, element, _2, _3, state) {\n    return state.scopeElements.includes(element);\n}\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */ function someChildren(element, check) {\n    const children = element.children;\n    let index = -1;\n    while(++index < children.length){\n        if (check(children[index])) return true;\n    }\n    return false;\n}\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */ function unknownPseudo(query_) {\n    // Runtime JS guarantees it has a `name`.\n    const query = /** @type {AstPseudoClass} */ query_;\n    throw new Error(\"Unknown pseudo-selector `\" + query.name + \"`\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/pseudo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/test.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/test.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   test: () => (/* binding */ test)\n/* harmony export */ });\n/* harmony import */ var _attribute_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attribute.js */ \"(ssr)/./node_modules/hast-util-select/lib/attribute.js\");\n/* harmony import */ var _class_name_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./class-name.js */ \"(ssr)/./node_modules/hast-util-select/lib/class-name.js\");\n/* harmony import */ var _id_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./id.js */ \"(ssr)/./node_modules/hast-util-select/lib/id.js\");\n/* harmony import */ var _name_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./name.js */ \"(ssr)/./node_modules/hast-util-select/lib/name.js\");\n/* harmony import */ var _pseudo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pseudo.js */ \"(ssr)/./node_modules/hast-util-select/lib/pseudo.js\");\n/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */ \n\n\n\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */ function test(query, element, index, parent, state) {\n    for (const item of query.items){\n        // eslint-disable-next-line unicorn/prefer-switch\n        if (item.type === \"Attribute\") {\n            if (!(0,_attribute_js__WEBPACK_IMPORTED_MODULE_0__.attribute)(item, element, state.schema)) return false;\n        } else if (item.type === \"Id\") {\n            if (!(0,_id_js__WEBPACK_IMPORTED_MODULE_1__.id)(item, element)) return false;\n        } else if (item.type === \"ClassName\") {\n            if (!(0,_class_name_js__WEBPACK_IMPORTED_MODULE_2__.className)(item, element)) return false;\n        } else if (item.type === \"PseudoClass\") {\n            if (!(0,_pseudo_js__WEBPACK_IMPORTED_MODULE_3__.pseudo)(item, element, index, parent, state)) return false;\n        } else if (item.type === \"PseudoElement\") {\n            throw new Error(\"Invalid selector: `::\" + item.name + \"`\");\n        } else if (item.type === \"TagName\") {\n            if (!(0,_name_js__WEBPACK_IMPORTED_MODULE_4__.name)(item, element)) return false;\n        } else {\n        // Otherwise `item.type` is `WildcardTag`, which matches.\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvdGVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRXVDO0FBQ0M7QUFDZjtBQUNJO0FBQ0k7QUFFbEM7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ00sU0FBU0ssS0FBS0MsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxLQUFLO0lBQ3ZELEtBQUssTUFBTUMsUUFBUUwsTUFBTU0sS0FBSyxDQUFFO1FBQzlCLGlEQUFpRDtRQUNqRCxJQUFJRCxLQUFLRSxJQUFJLEtBQUssYUFBYTtZQUM3QixJQUFJLENBQUNiLHdEQUFTQSxDQUFDVyxNQUFNSixTQUFTRyxNQUFNSSxNQUFNLEdBQUcsT0FBTztRQUN0RCxPQUFPLElBQUlILEtBQUtFLElBQUksS0FBSyxNQUFNO1lBQzdCLElBQUksQ0FBQ1gsMENBQUVBLENBQUNTLE1BQU1KLFVBQVUsT0FBTztRQUNqQyxPQUFPLElBQUlJLEtBQUtFLElBQUksS0FBSyxhQUFhO1lBQ3BDLElBQUksQ0FBQ1oseURBQVNBLENBQUNVLE1BQU1KLFVBQVUsT0FBTztRQUN4QyxPQUFPLElBQUlJLEtBQUtFLElBQUksS0FBSyxlQUFlO1lBQ3RDLElBQUksQ0FBQ1Qsa0RBQU1BLENBQUNPLE1BQU1KLFNBQVNDLE9BQU9DLFFBQVFDLFFBQVEsT0FBTztRQUMzRCxPQUFPLElBQUlDLEtBQUtFLElBQUksS0FBSyxpQkFBaUI7WUFDeEMsTUFBTSxJQUFJRSxNQUFNLDBCQUEwQkosS0FBS1IsSUFBSSxHQUFHO1FBQ3hELE9BQU8sSUFBSVEsS0FBS0UsSUFBSSxLQUFLLFdBQVc7WUFDbEMsSUFBSSxDQUFDViw4Q0FBSUEsQ0FBQ1EsTUFBTUosVUFBVSxPQUFPO1FBQ25DLE9BQU87UUFDTCx5REFBeUQ7UUFDM0Q7SUFDRjtJQUVBLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnRhaW5lcmRfbXVsdGlub3Rlcy8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtc2VsZWN0L2xpYi90ZXN0LmpzP2M4NGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW1wb3J0IHtBc3RSdWxlfSBmcm9tICdjc3Mtc2VsZWN0b3ItcGFyc2VyJ1xuICogQGltcG9ydCB7RWxlbWVudCwgUGFyZW50c30gZnJvbSAnaGFzdCdcbiAqIEBpbXBvcnQge1N0YXRlfSBmcm9tICcuL2luZGV4LmpzJ1xuICovXG5cbmltcG9ydCB7YXR0cmlidXRlfSBmcm9tICcuL2F0dHJpYnV0ZS5qcydcbmltcG9ydCB7Y2xhc3NOYW1lfSBmcm9tICcuL2NsYXNzLW5hbWUuanMnXG5pbXBvcnQge2lkfSBmcm9tICcuL2lkLmpzJ1xuaW1wb3J0IHtuYW1lfSBmcm9tICcuL25hbWUuanMnXG5pbXBvcnQge3BzZXVkb30gZnJvbSAnLi9wc2V1ZG8uanMnXG5cbi8qKlxuICogVGVzdCBhIHJ1bGUuXG4gKlxuICogQHBhcmFtIHtBc3RSdWxlfSBxdWVyeVxuICogICBBU1QgcnVsZSAod2l0aCBgcHNldWRvQ2xhc3Nlc2ApLlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiAgIEVsZW1lbnQuXG4gKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gaW5kZXhcbiAqICAgSW5kZXggb2YgYGVsZW1lbnRgIGluIGBwYXJlbnRgLlxuICogQHBhcmFtIHtQYXJlbnRzIHwgdW5kZWZpbmVkfSBwYXJlbnRcbiAqICAgUGFyZW50IG9mIGBlbGVtZW50YC5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIFN0YXRlLlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKiAgIFdoZXRoZXIgYGVsZW1lbnRgIG1hdGNoZXMgYHF1ZXJ5YC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRlc3QocXVlcnksIGVsZW1lbnQsIGluZGV4LCBwYXJlbnQsIHN0YXRlKSB7XG4gIGZvciAoY29uc3QgaXRlbSBvZiBxdWVyeS5pdGVtcykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL3ByZWZlci1zd2l0Y2hcbiAgICBpZiAoaXRlbS50eXBlID09PSAnQXR0cmlidXRlJykge1xuICAgICAgaWYgKCFhdHRyaWJ1dGUoaXRlbSwgZWxlbWVudCwgc3RhdGUuc2NoZW1hKSkgcmV0dXJuIGZhbHNlXG4gICAgfSBlbHNlIGlmIChpdGVtLnR5cGUgPT09ICdJZCcpIHtcbiAgICAgIGlmICghaWQoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnQ2xhc3NOYW1lJykge1xuICAgICAgaWYgKCFjbGFzc05hbWUoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnUHNldWRvQ2xhc3MnKSB7XG4gICAgICBpZiAoIXBzZXVkbyhpdGVtLCBlbGVtZW50LCBpbmRleCwgcGFyZW50LCBzdGF0ZSkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnUHNldWRvRWxlbWVudCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzZWxlY3RvcjogYDo6JyArIGl0ZW0ubmFtZSArICdgJylcbiAgICB9IGVsc2UgaWYgKGl0ZW0udHlwZSA9PT0gJ1RhZ05hbWUnKSB7XG4gICAgICBpZiAoIW5hbWUoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBPdGhlcndpc2UgYGl0ZW0udHlwZWAgaXMgYFdpbGRjYXJkVGFnYCwgd2hpY2ggbWF0Y2hlcy5cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZVxufVxuIl0sIm5hbWVzIjpbImF0dHJpYnV0ZSIsImNsYXNzTmFtZSIsImlkIiwibmFtZSIsInBzZXVkbyIsInRlc3QiLCJxdWVyeSIsImVsZW1lbnQiLCJpbmRleCIsInBhcmVudCIsInN0YXRlIiwiaXRlbSIsIml0ZW1zIiwidHlwZSIsInNjaGVtYSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/test.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/walk.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/walk.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walk: () => (/* binding */ walk)\n/* harmony export */ });\n/* harmony import */ var _enter_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enter-state.js */ \"(ssr)/./node_modules/hast-util-select/lib/enter-state.js\");\n/* harmony import */ var _test_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./test.js */ \"(ssr)/./node_modules/hast-util-select/lib/test.js\");\n/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Nodes, Parents} from 'hast'\n * @import {State} from './index.js'\n */ /**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */ \n\n/** @type {Array<never>} */ const empty = [];\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */ function walk(state, tree) {\n    if (tree) {\n        one(state, [], tree, undefined, undefined, tree);\n    }\n}\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */ function add(nest, field, rule) {\n    const list = nest[field];\n    if (list) {\n        list.push(rule);\n    } else {\n        nest[field] = [\n            rule\n        ];\n    }\n}\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */ function all(state, nest, node, tree) {\n    const fromParent = combine(nest.descendant, nest.directChild);\n    /** @type {Array<AstRule> | undefined} */ let fromSibling;\n    let index = -1;\n    /**\n   * Total counts.\n   * @type {Counts}\n   */ const total = {\n        count: 0,\n        types: new Map()\n    };\n    /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */ const before = {\n        count: 0,\n        types: new Map()\n    };\n    while(++index < node.children.length){\n        count(total, node.children[index]);\n    }\n    index = -1;\n    while(++index < node.children.length){\n        const child = node.children[index];\n        // Uppercase to prevent prototype polution, injecting `constructor` or so.\n        // Normalize because HTML is insensitive.\n        const name = child.type === \"element\" ? child.tagName.toUpperCase() : undefined;\n        // Before counting further elements:\n        state.elementIndex = before.count;\n        state.typeIndex = name ? before.types.get(name) || 0 : 0;\n        // After counting all elements.\n        state.elementCount = total.count;\n        state.typeCount = name ? total.types.get(name) : 0;\n        // Only apply if this is a parent, this should be an element, but we check\n        // for parents so that we delve into custom nodes too.\n        if (\"children\" in child) {\n            const forSibling = combine(fromParent, fromSibling);\n            const nest = one(state, forSibling, node.children[index], index, node, tree);\n            fromSibling = combine(nest.generalSibling, nest.adjacentSibling);\n        }\n        // We found one thing, and one is enough.\n        if (state.one && state.found) {\n            break;\n        }\n        count(before, node.children[index]);\n    }\n}\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */ function applySelectors(state, rules, node, index, parent) {\n    /** @type {Nest} */ const nestResult = {\n        adjacentSibling: undefined,\n        descendant: undefined,\n        directChild: undefined,\n        generalSibling: undefined\n    };\n    let selectorIndex = -1;\n    while(++selectorIndex < rules.length){\n        const rule = rules[selectorIndex];\n        // We found one thing, and one is enough.\n        if (state.one && state.found) {\n            break;\n        }\n        // When shallow, we don’t allow nested rules.\n        // Idea: we could allow a stack of parents?\n        // Might get quite complex though.\n        if (state.shallow && rule.nestedRule) {\n            throw new Error(\"Expected selector without nesting\");\n        }\n        // If this rule matches:\n        if ((0,_test_js__WEBPACK_IMPORTED_MODULE_0__.test)(rule, node, index, parent, state)) {\n            const nest = rule.nestedRule;\n            // Are there more?\n            if (nest) {\n                /** @type {keyof Nest} */ const label = nest.combinator === \"+\" ? \"adjacentSibling\" : nest.combinator === \"~\" ? \"generalSibling\" : nest.combinator === \">\" ? \"directChild\" : \"descendant\";\n                add(nestResult, label, nest);\n            } else {\n                // We have a match!\n                state.found = true;\n                if (!state.results.includes(node)) {\n                    state.results.push(node);\n                }\n            }\n        }\n        // Descendant.\n        if (rule.combinator === undefined) {\n            add(nestResult, \"descendant\", rule);\n        } else if (rule.combinator === \"~\") {\n            add(nestResult, \"generalSibling\", rule);\n        }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n    }\n    return nestResult;\n}\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */ function combine(left, right) {\n    return left && right && left.length > 0 && right.length > 0 ? [\n        ...left,\n        ...right\n    ] : left && left.length > 0 ? left : right && right.length > 0 ? right : empty;\n}\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */ function count(counts, node) {\n    if (node.type === \"element\") {\n        // Uppercase to prevent prototype polution, injecting `constructor` or so.\n        // Normalize because HTML is insensitive.\n        const name = node.tagName.toUpperCase();\n        const count = (counts.types.get(name) || 0) + 1;\n        counts.count++;\n        counts.types.set(name, count);\n    }\n}\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */ function one(state, currentRules, node, index, parent, tree) {\n    /** @type {Nest} */ let nestResult = {\n        adjacentSibling: undefined,\n        descendant: undefined,\n        directChild: undefined,\n        generalSibling: undefined\n    };\n    const exit = (0,_enter_state_js__WEBPACK_IMPORTED_MODULE_1__.enterState)(state, node);\n    if (node.type === \"element\") {\n        let rootRules = state.rootQuery.rules;\n        // Remove direct child rules if this is the root.\n        // This only happens for a `:has()` rule, which can be like\n        // `a:has(> b)`.\n        if (parent && parent !== tree) {\n            rootRules = state.rootQuery.rules.filter((d)=>d.combinator === undefined || d.combinator === \">\" && parent === tree);\n        }\n        nestResult = applySelectors(state, // Try the root rules for this element too.\n        combine(currentRules, rootRules), node, index, parent);\n    }\n    // If this is a parent, and we want to delve into them, and we haven’t found\n    // our single result yet.\n    if (\"children\" in node && !state.shallow && !(state.one && state.found)) {\n        all(state, nestResult, node, tree);\n    }\n    exit();\n    return nestResult;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/walk.js\n");

/***/ })

};
;